/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: DoobiDooba (https://sketchfab.com/DoobiDooba)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/rubiks-cube-155420e09a124ec3a3bcca0852280672
title: rubik's cube
*/

import { useGLTF } from '@react-three/drei';
import { useEffect, useState } from 'react';

export function Rubics(props) {
  const { nodes, materials } = useGLTF(
    '/src/assets/3d-models/rubics-cube/rubics.gltf'
  );
  const [scrollEffectRotation, setScrollEffectRotation] = useState(0);
  const [scrollEffectZ, setScrollEffectZ] = useState(0);
  const [scrollEffectScale, setScrollEffectScale] = useState(9);

  useEffect(() => {
    const handleScroll = () => {
      setScrollEffectRotation(window.scrollY * 0.003);
      setScrollEffectZ(window.scrollY * 0.01);
      setScrollEffectScale(9 + window.scrollY * 0.03);
    };
    window.addEventListener('scroll', handleScroll);
    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [scrollEffectRotation]);
  return (
    <group
      scale={scrollEffectScale}
      position={[0, -3, scrollEffectZ]}
      rotation={[0, 2.5, scrollEffectRotation]}
      {...props}
      dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={1.15}>
        <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
          <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
            <mesh
              geometry={nodes.RubixCube_RubixCube_0.geometry}
              material={materials.RubixCube}
            />
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload('/src/assets/3d-models/rubics-cube/rubics.gltf');
